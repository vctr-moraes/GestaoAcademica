// <auto-generated />
using System;
using GestaoAcademica.Cursos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoAcademica.Cursos.Data.Migrations
{
    [DbContext(typeof(CursoContext))]
    [Migration("20250106223633_Initial3")]
    partial class Initial3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CargaHoraria")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Grau")
                        .HasColumnType("int");

                    b.Property<Guid>("IdProfessorCoordenador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Modalidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeProfessorCoordenador")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.CursosDisciplinas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("DisciplinaId")
                        .IsUnique();

                    b.ToTable("CursosDisciplinas");
                });

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CargaHoraria")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdProfessor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeProfessor")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas", (string)null);
                });

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.CursosDisciplinas", b =>
                {
                    b.HasOne("GestaoAcademica.Cursos.Domain.Models.Curso", "Curso")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAcademica.Cursos.Domain.Models.Disciplina", "Disciplina")
                        .WithOne("CursosDisciplinas")
                        .HasForeignKey("GestaoAcademica.Cursos.Domain.Models.CursosDisciplinas", "DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.Curso", b =>
                {
                    b.Navigation("CursosDisciplinas");
                });

            modelBuilder.Entity("GestaoAcademica.Cursos.Domain.Models.Disciplina", b =>
                {
                    b.Navigation("CursosDisciplinas")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
